/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.MySQLManager;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.CorreosClientes;
import modelo.TelefonosClientes;
import modelo.DireccionesClientes;

/**
 *
 * @author MegaJoc
 */
public class vistaClientes extends javax.swing.JFrame {

    ArrayList<Cliente> listaCliente = new ArrayList<>();
    ArrayList<DireccionesClientes> listaDireccionesClientes = new ArrayList<>();
    ArrayList<TelefonosClientes> listaTelefonosClientes = new ArrayList<>();
    ArrayList<CorreosClientes> listaCorreosClientes = new ArrayList<>();
    DefaultTableModel modelo;

    /**
     * Creates new form vistaClientes
     */
    public vistaClientes() {

        initComponents();
        mostrarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClienteTBL = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        idClienteTXT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        rutClienteTXT = new javax.swing.JTextField();
        nomClienteTXT = new javax.swing.JTextField();
        apePaternoClienteTXT = new javax.swing.JTextField();
        apeMaternoClienteTXT = new javax.swing.JTextField();
        direccionClienteTXT = new javax.swing.JTextField();
        telefonoClienteTXT = new javax.swing.JTextField();
        correoClienteTXT = new javax.swing.JTextField();
        fecNacimientoClienteTXT = new javax.swing.JTextField();
        agregarDireccionClienteBTN = new javax.swing.JButton();
        agregarTelefonoClienteBTN = new javax.swing.JButton();
        agregarCorreoClienteBTN = new javax.swing.JButton();
        agregarClienteBTN = new javax.swing.JButton();
        editarClienteBTN = new javax.swing.JButton();
        eliminarClienteBTN = new javax.swing.JButton();
        salirClienteBTN = new javax.swing.JButton();
        limpiartabla = new javax.swing.JButton();
        cargartabla = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Menú de clientes");

        tablaClienteTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID cliente", "Rut", "Nombres", "Apellido paterno", "Apellido materno", "Fecha de nacimiento", "Dirección", "Teléfono", "E-mail"
            }
        ));
        tablaClienteTBL.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tablaClienteTBL);

        jLabel2.setText("ID de cliente:");

        jLabel3.setText("(Solamente necesario para editar o eliminar cliente.)");

        jLabel4.setText("Rut:");

        jLabel5.setText("Nombre:");

        jLabel6.setText("Apellido paterno:");

        jLabel7.setText("Apellido materno:");

        jLabel8.setText("Ingrese su dirección:");

        jLabel9.setText("Ingrese su teléfono:");

        jLabel10.setText("Ingrese su correo:");

        jLabel11.setText("Fecha de nacimiento:");

        agregarDireccionClienteBTN.setText("Agregar dirección");
        agregarDireccionClienteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarDireccionClienteBTNActionPerformed(evt);
            }
        });

        agregarTelefonoClienteBTN.setText("Agregar teléfono");
        agregarTelefonoClienteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarTelefonoClienteBTNActionPerformed(evt);
            }
        });

        agregarCorreoClienteBTN.setText("Agregar correo electrónico");
        agregarCorreoClienteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCorreoClienteBTNActionPerformed(evt);
            }
        });

        agregarClienteBTN.setText("Agregar cliente");
        agregarClienteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarClienteBTNActionPerformed(evt);
            }
        });

        editarClienteBTN.setText("Editar cliente");
        editarClienteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarClienteBTNActionPerformed(evt);
            }
        });

        eliminarClienteBTN.setText("Eliminar cliente");
        eliminarClienteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarClienteBTNActionPerformed(evt);
            }
        });

        salirClienteBTN.setText("Salir");
        salirClienteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirClienteBTNActionPerformed(evt);
            }
        });

        limpiartabla.setText("limpiartabla");
        limpiartabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiartablaActionPerformed(evt);
            }
        });

        cargartabla.setText("cargartabla");
        cargartabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargartablaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(correoClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(agregarTelefonoClienteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(telefonoClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(agregarCorreoClienteBTN)))
                    .addComponent(jLabel10)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(direccionClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarDireccionClienteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fecNacimientoClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(apeMaternoClienteTXT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(apePaternoClienteTXT, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nomClienteTXT, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(rutClienteTXT, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(limpiartabla)
                                .addGap(184, 184, 184)
                                .addComponent(cargartabla))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(agregarClienteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(editarClienteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(eliminarClienteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)
                        .addComponent(salirClienteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 132, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(idClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(rutClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(nomClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(apePaternoClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(apeMaternoClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(fecNacimientoClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(direccionClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(agregarDireccionClienteBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(telefonoClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(agregarTelefonoClienteBTN)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(correoClienteTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agregarCorreoClienteBTN)
                        .addGap(132, 132, 132))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editarClienteBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                            .addComponent(agregarClienteBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eliminarClienteBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(salirClienteBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cargartabla)
                            .addComponent(limpiartabla))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarClienteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarClienteBTNActionPerformed
        if (confirmaTextField()) {

            int fecha_nac;

            String rut = rutClienteTXT.getText().toUpperCase();
            String nombre = nomClienteTXT.getText().toUpperCase();
            String apellido_pat = apePaternoClienteTXT.getText().toUpperCase();
            String apellido_mat = apeMaternoClienteTXT.getText().toUpperCase();
            String direccion = "";
            int telefono = 0;
            String correo = "";
            fecha_nac = Integer.parseInt(fecNacimientoClienteTXT.getText());

            Cliente cl = new Cliente(rut, nombre, apellido_pat, apellido_mat, fecha_nac);
            cl.agregarCliente(rut, nombre, apellido_pat, apellido_mat, fecha_nac);

            mostrarTabla();

            JOptionPane.showMessageDialog(new JFrame(), "Cliente agregado satisfactoriamente");

        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Complete todos los campos, porfavor.");

        }
    }//GEN-LAST:event_agregarClienteBTNActionPerformed

    private void editarClienteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarClienteBTNActionPerformed
        int id_cliente;
        int fecha_nac;
        int telefono;

        id_cliente = Integer.parseInt(idClienteTXT.getText());
        String rut = rutClienteTXT.getText();
        String nombre = nomClienteTXT.getText().toUpperCase();
        String apellido_pat = apePaternoClienteTXT.getText().toUpperCase();
        String apellido_mat = apeMaternoClienteTXT.getText().toUpperCase();
        fecha_nac = Integer.parseInt(fecNacimientoClienteTXT.getText());
        String direccion = direccionClienteTXT.getText().toUpperCase();
        telefono = Integer.parseInt(telefonoClienteTXT.getText());
        String correo = correoClienteTXT.getText();

        Cliente cl = new Cliente(id_cliente, rut, nombre, apellido_pat, apellido_mat, fecha_nac);
        cl.actualizarCliente(id_cliente, rut, nombre, apellido_pat, apellido_mat, fecha_nac);
        cl.editarDireccionCliente(id_cliente, direccion);
        cl.editarTelefonoCliente(id_cliente, telefono);
        cl.editarCorreoCliente(id_cliente, correo);

        mostrarTabla();
    }//GEN-LAST:event_editarClienteBTNActionPerformed

    private void eliminarClienteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarClienteBTNActionPerformed
        int id_cliente;
        id_cliente = Integer.parseInt(idClienteTXT.getText());

        Cliente cl = new Cliente();
        cl.borrarCliente(id_cliente);

        mostrarTabla();

        JOptionPane.showMessageDialog(new JFrame(), "Cliente eliminado con éxito.");
    }//GEN-LAST:event_eliminarClienteBTNActionPerformed

    private void agregarDireccionClienteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarDireccionClienteBTNActionPerformed

        int id_cliente;

        String direccion;

        id_cliente = Integer.parseInt(idClienteTXT.getText());
        direccion = direccionClienteTXT.getText().toUpperCase();

        Cliente cl = new Cliente();
        cl.agregarDireccionCliente(id_cliente, direccion);

        mostrarTabla();
    }//GEN-LAST:event_agregarDireccionClienteBTNActionPerformed

    private void agregarTelefonoClienteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarTelefonoClienteBTNActionPerformed
        int id_cliente;
        int telefono;

        id_cliente = Integer.parseInt(idClienteTXT.getText());
        telefono = Integer.parseInt(telefonoClienteTXT.getText());

        Cliente cl = new Cliente();
        cl.agregarTelefonoCliente(id_cliente, telefono);

        mostrarTabla();
    }//GEN-LAST:event_agregarTelefonoClienteBTNActionPerformed

    private void agregarCorreoClienteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCorreoClienteBTNActionPerformed
        int id_cliente;
        String correo;

        id_cliente = Integer.parseInt(idClienteTXT.getText());
        correo = correoClienteTXT.getText();

        Cliente cl = new Cliente();
        cl.agregarCorreoCliente(id_cliente, correo);

        mostrarTabla();

    }//GEN-LAST:event_agregarCorreoClienteBTNActionPerformed

    private void salirClienteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirClienteBTNActionPerformed
        dispose();
    }//GEN-LAST:event_salirClienteBTNActionPerformed

    private void cargartablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargartablaActionPerformed
        mostrarTabla();
    }//GEN-LAST:event_cargartablaActionPerformed

    private void limpiartablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiartablaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_limpiartablaActionPerformed

    public void mostrarTabla() {
        //Se remueve el contenido previo de las listas
        listaCliente.removeAll(listaCliente);
        listaDireccionesClientes.removeAll(listaDireccionesClientes);
        listaTelefonosClientes.removeAll(listaDireccionesClientes);
        listaTelefonosClientes.removeAll(listaTelefonosClientes);
        //Se llenan las listas
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        manager.executeQueryConsultaLLenaTablaClientes(listaCliente);
        manager.executeQueryConsultaLLenaTablaDireccionesClientes(listaDireccionesClientes);
        manager.executeQueryConsultaLLenaTablaTelefonosClientes(listaTelefonosClientes);
        manager.executeQueryConsultaLLenaTablaCorreosClientes(listaCorreosClientes);
        //Se define la matriz que contiene la informacion
        String matriz[][] = new String[listaCliente.size()][9];

        //Se definen las columnas de la tabla
        String[] columnas = {
            "ID cliente", "Rut", "Nombres", "Apellido paterno", "Apellido materno", "Fecha de nacimiento", "Dirección", "Teléfono", "E-mail"
        };
        //Este iterador llena la matriz que contiene los datos
        for (int i = 0; i < listaCliente.size(); i++) {
            //Variables auxiliares que contienen los telefonos , direcciones y correos
            String telefonosClientes = "";
            String correosClientes = "";
            String direcciones = "";
            int idcliAux ;

            System.out.println(i);
            //Se obtiene el id y la fecha de nacimiento del cliente desde la lista
            String idcli = Integer.toString(listaCliente.get(i).getId_cliente());
            String fecha_nac = Integer.toString(listaCliente.get(i).getFecha_nac());
            //Se define el id del cliente como el iterador + 1 ya que la base de datos parte desde el 1 y el for desde el 0
            idcliAux = listaCliente.get(i).getId_cliente();
            System.out.println("Id del cliente actual : "+idcliAux);
            //Se llena la matriz
            matriz[i][0] = idcli;
            matriz[i][1] = listaCliente.get(i).getRut();
            matriz[i][2] = listaCliente.get(i).getNombre();
            matriz[i][3] = listaCliente.get(i).getApellido_pat();
            matriz[i][4] = listaCliente.get(i).getApellido_mat();
            matriz[i][5] = fecha_nac;
            //Se itera la cantidad de veces que corresponda con respecto a la lista
            for (int j = 0; j < listaDireccionesClientes.size(); j++) {
                //si el idaux es = al id de clientes se concatena la direccion al string mantenedor
                System.out.println("Direcciones -> id cliente a comparar:" +listaDireccionesClientes.get(j).getId_cliente()  + " , id actual:" + idcliAux);
                if (idcliAux == listaDireccionesClientes.get(j).getId_cliente()) {
                    direcciones= direcciones.concat(listaDireccionesClientes.get(j).getDirecciones() + " , ");
                    System.out.println(direcciones);
                    
                } 
            }

            matriz[i][6] = direcciones;
            for (int k = 0; k < listaTelefonosClientes.size(); k++) {
                
                System.out.println("Telefonos -> id cliente a comparar:"+listaTelefonosClientes.get(k).getId_cliente() + " , id actual" + idcliAux);
                if (idcliAux == listaTelefonosClientes.get(k).getId_cliente()) {
                    telefonosClientes = telefonosClientes.concat(Integer.toString(listaTelefonosClientes.get(k).getTelefono()) + " , ");
                    System.out.println(telefonosClientes);
                } 
            }
            matriz[i][7] = telefonosClientes;
            for (int l = 0; l < listaCorreosClientes.size(); l++) {
                System.out.println("Correos -> id cliente a comparar:"+listaCorreosClientes.get(l).getId_cliente()+" , id actual" + idcliAux);
                if (idcliAux == listaCorreosClientes.get(l).getId_cliente()) {
                    correosClientes = correosClientes.concat(listaCorreosClientes.get(l).getCorreo() + ",");
                    System.out.println(correosClientes);
                }
            }
            matriz[i][8] = correosClientes;
        }
        //Se crea el Tablemodel 
        DefaultTableModel dtm = new DefaultTableModel(matriz, columnas);
        //Se cambia el tablemodel
        tablaClienteTBL.setModel(dtm);

    }

    private boolean confirmaTextField() {
        boolean rut = false;
        boolean nombre = false;
        boolean apellido_pat = false;
        boolean apellido_mat = false;
        boolean fecha_nac = false;
        int contver = 0;

        rut = rutClienteTXT.getText().isEmpty();
        nombre = nomClienteTXT.getText().isEmpty();
        apellido_pat = apePaternoClienteTXT.getText().isEmpty();
        apellido_mat = apeMaternoClienteTXT.getText().isEmpty();
        fecha_nac = fecNacimientoClienteTXT.getText().isEmpty();

        boolean[] arraytxt = new boolean[]{rut, nombre, apellido_pat, apellido_mat, fecha_nac};
        for (boolean elemento : arraytxt) {
            if (elemento == true) {

            } else {
                contver++;

            }

        }
        return contver == 5;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vistaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vistaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vistaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vistaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vistaClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarClienteBTN;
    private javax.swing.JButton agregarCorreoClienteBTN;
    private javax.swing.JButton agregarDireccionClienteBTN;
    private javax.swing.JButton agregarTelefonoClienteBTN;
    private javax.swing.JTextField apeMaternoClienteTXT;
    private javax.swing.JTextField apePaternoClienteTXT;
    private javax.swing.JButton cargartabla;
    private javax.swing.JTextField correoClienteTXT;
    private javax.swing.JTextField direccionClienteTXT;
    private javax.swing.JButton editarClienteBTN;
    private javax.swing.JButton eliminarClienteBTN;
    private javax.swing.JTextField fecNacimientoClienteTXT;
    private javax.swing.JTextField idClienteTXT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiartabla;
    private javax.swing.JTextField nomClienteTXT;
    private javax.swing.JTextField rutClienteTXT;
    private javax.swing.JButton salirClienteBTN;
    private javax.swing.JTable tablaClienteTBL;
    private javax.swing.JTextField telefonoClienteTXT;
    // End of variables declaration//GEN-END:variables
}
