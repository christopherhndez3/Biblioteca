/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;
import controlador.MySQLManager;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import modelo.CorreosTrabajadores;
import modelo.DireccionesTrabajadores;
import modelo.TelefonosTrabajadores;
import modelo.Trabajador;
;
/**
 *
 * @author MegaJoc
 */
public class vistaTrabajadores extends javax.swing.JFrame {

    ArrayList<Trabajador> listaTrabajador = new ArrayList<>();
    ArrayList<DireccionesTrabajadores> listaDireccionesTrabajadores = new ArrayList<>();
    ArrayList<TelefonosTrabajadores> listaTelefonosTrabajadores = new ArrayList<>();
    ArrayList<CorreosTrabajadores> listaCorreosTrabajadores = new ArrayList<>();
    
    public vistaTrabajadores() {
        initComponents();
        limpiarTabla();
        mostrarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        idTrabajadorTXT = new javax.swing.JTextField();
        nomTrabajadorTXT = new javax.swing.JTextField();
        apePaternoTrabajadorTXT = new javax.swing.JTextField();
        rutTrabajadorTXT = new javax.swing.JTextField();
        apeMaternoTrabajadorTXT = new javax.swing.JTextField();
        fecContratacionTrabajadorTXT = new javax.swing.JTextField();
        telefonoTrabajadorTXT = new javax.swing.JTextField();
        direccionTrabajadorTXT = new javax.swing.JTextField();
        correoTrabajadorTXT = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        agregarDireccionTrabajadorBTN = new javax.swing.JButton();
        agregarTelefonoTrabajadorBTN = new javax.swing.JButton();
        agregarCorreoTrabajadorBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTrabajadoresTBL = new javax.swing.JTable();
        editarTrabajadorBTN = new javax.swing.JButton();
        eliminarTrabajadorBTN = new javax.swing.JButton();
        salirTrabajadorBTN = new javax.swing.JButton();
        agregarTrabajadorBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Menú de trabajadores");

        jLabel2.setText("ID de trabajador:");

        jLabel3.setText("Rut:");

        jLabel4.setText("Nombre:");

        jLabel5.setText("Apellido paterno:");

        jLabel6.setText("Apellido materno:");

        jLabel7.setText("Fecha de contratación:");

        jLabel8.setText("Dirección(es):");

        jLabel9.setText("Teléfono(s):");

        jLabel10.setText("Correo(s):");

        jLabel11.setText("(Solo necesario para editar o eliminar trabajador.)");

        agregarDireccionTrabajadorBTN.setText("Agregar dirección.");
        agregarDireccionTrabajadorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarDireccionTrabajadorBTNActionPerformed(evt);
            }
        });

        agregarTelefonoTrabajadorBTN.setText("Agregar teléfono.");
        agregarTelefonoTrabajadorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarTelefonoTrabajadorBTNActionPerformed(evt);
            }
        });

        agregarCorreoTrabajadorBTN.setText("Agregar e-mail.");
        agregarCorreoTrabajadorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCorreoTrabajadorBTNActionPerformed(evt);
            }
        });

        tablaTrabajadoresTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID trabajador", "Rut", "Nombre", "Apellido paterno", "Apellido materno", "Fecha de contratación", "Dirección", "Teléfono", "E-mail"
            }
        ));
        jScrollPane1.setViewportView(tablaTrabajadoresTBL);

        editarTrabajadorBTN.setText("Editar trabajador");
        editarTrabajadorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarTrabajadorBTNActionPerformed(evt);
            }
        });

        eliminarTrabajadorBTN.setText("Eliminar trabajador");
        eliminarTrabajadorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarTrabajadorBTNActionPerformed(evt);
            }
        });

        salirTrabajadorBTN.setText("Salir");
        salirTrabajadorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirTrabajadorBTNActionPerformed(evt);
            }
        });

        agregarTrabajadorBTN.setText("Agregar trabajador");
        agregarTrabajadorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarTrabajadorBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apeMaternoTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(apePaternoTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rutTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(agregarTelefonoTrabajadorBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(correoTrabajadorTXT)
                            .addComponent(telefonoTrabajadorTXT)
                            .addComponent(direccionTrabajadorTXT)
                            .addComponent(agregarDireccionTrabajadorBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(agregarCorreoTrabajadorBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fecContratacionTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(agregarTrabajadorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(editarTrabajadorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(eliminarTrabajadorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(salirTrabajadorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 975, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarTrabajadorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarTrabajadorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarTrabajadorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salirTrabajadorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(219, 219, 219))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rutTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nomTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(apePaternoTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(apeMaternoTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(fecContratacionTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(direccionTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarDireccionTrabajadorBTN)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(telefonoTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarTelefonoTrabajadorBTN)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(correoTrabajadorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarCorreoTrabajadorBTN)
                .addGap(144, 144, 144))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarTrabajadorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarTrabajadorBTNActionPerformed
        
        if (confirmaTextField()) {
            
            int fecha_cont;
            
            String rut          = rutTrabajadorTXT.getText().toUpperCase();
            String nombre       = nomTrabajadorTXT.getText().toUpperCase();
            String apellido_pat = apePaternoTrabajadorTXT.getText().toUpperCase();
            String apellido_mat = apeMaternoTrabajadorTXT.getText().toUpperCase();
            String direccion    = "";
            int telefono        = 0;
            String correo       = "";
            fecha_cont           = Integer.parseInt(fecContratacionTrabajadorTXT.getText());
            

            Trabajador tr = new Trabajador(rut, nombre, apellido_pat, apellido_mat, fecha_cont);
            tr.agregarTrabajador(rut, nombre, apellido_pat, apellido_mat, fecha_cont);

            limpiarTabla();
            mostrarTabla();

            JOptionPane.showMessageDialog(new JFrame(), "Trabajador agregado satisfactoriamente");

        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Complete todos los campos, porfavor.");

        }
    }//GEN-LAST:event_agregarTrabajadorBTNActionPerformed

    private void editarTrabajadorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarTrabajadorBTNActionPerformed
        
        int id_trabajador;
        int fecha_cont;
        int telefono;
        
        id_trabajador          = Integer.parseInt(idTrabajadorTXT.getText());
        String rut          = rutTrabajadorTXT.getText();
        String nombre       = nomTrabajadorTXT.getText().toUpperCase();
        String apellido_pat = apePaternoTrabajadorTXT.getText().toUpperCase();
        String apellido_mat = apeMaternoTrabajadorTXT.getText().toUpperCase();
        fecha_cont           = Integer.parseInt(fecContratacionTrabajadorTXT.getText());
        String direccion    = direccionTrabajadorTXT.getText().toUpperCase();
        telefono            = Integer.parseInt(telefonoTrabajadorTXT.getText());
        String correo       = correoTrabajadorTXT.getText();

        Trabajador tr = new Trabajador(id_trabajador, rut, nombre, apellido_pat, apellido_mat, fecha_cont);
        tr.actualizarTrabajador(id_trabajador, rut, nombre, apellido_pat, apellido_mat, fecha_cont);
        tr.editarDireccionTrabajador(id_trabajador, direccion);
        tr.editarTelefonoTrabajador(id_trabajador, telefono);
        tr.editarCorreoTrabajador(id_trabajador, correo);
        
        limpiarTabla();
        mostrarTabla();
    }//GEN-LAST:event_editarTrabajadorBTNActionPerformed

    private void eliminarTrabajadorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarTrabajadorBTNActionPerformed
        
        int id_trabajador;       
        id_trabajador          = Integer.parseInt(idTrabajadorTXT.getText());
       
        Trabajador tr = new Trabajador();
        tr.borrarTrabajador(id_trabajador);
        limpiarTabla();
        mostrarTabla();
        
        JOptionPane.showMessageDialog(new JFrame(), "Cliente eliminado con éxito.");
    }//GEN-LAST:event_eliminarTrabajadorBTNActionPerformed

    private void agregarDireccionTrabajadorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarDireccionTrabajadorBTNActionPerformed
        
        int id_trabajador;
        String direccion;
        
        id_trabajador = Integer.parseInt(idTrabajadorTXT.getText());
        direccion  = direccionTrabajadorTXT.getText().toUpperCase();
        
        Trabajador tr = new Trabajador();
        tr.agregarDireccionTrabajador(id_trabajador, direccion);
        
        limpiarTabla();
        mostrarTabla();
    }//GEN-LAST:event_agregarDireccionTrabajadorBTNActionPerformed

    private void agregarTelefonoTrabajadorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarTelefonoTrabajadorBTNActionPerformed
        
        int id_trabajador;
        int telefono;
        
        id_trabajador = Integer.parseInt(idTrabajadorTXT.getText());
        telefono   = Integer.parseInt(telefonoTrabajadorTXT.getText());
        
        Trabajador tr = new Trabajador();
        tr.agregarTelefonoTrabajador(id_trabajador, telefono);
        
        limpiarTabla();
        mostrarTabla();
    }//GEN-LAST:event_agregarTelefonoTrabajadorBTNActionPerformed

    private void agregarCorreoTrabajadorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCorreoTrabajadorBTNActionPerformed
        
        int id_trabajador;
        String correo;
        
        id_trabajador = Integer.parseInt(idTrabajadorTXT.getText());
        correo     = correoTrabajadorTXT.getText();
        
        Trabajador tr = new Trabajador();
        tr.agregarCorreoTrabajador(id_trabajador, correo);
        
        limpiarTabla();
        mostrarTabla();
    }//GEN-LAST:event_agregarCorreoTrabajadorBTNActionPerformed

    private void salirTrabajadorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirTrabajadorBTNActionPerformed
        dispose();
    }//GEN-LAST:event_salirTrabajadorBTNActionPerformed

    private boolean confirmaTextField() {
        boolean rut          = false;
        boolean nombre       = false;
        boolean apellido_pat = false;
        boolean apellido_mat = false;
        boolean fecha_cont   = false;
        int contver = 0;

        rut          = rutTrabajadorTXT.getText().isEmpty();
        nombre       = nomTrabajadorTXT.getText().isEmpty();
        apellido_pat = apePaternoTrabajadorTXT.getText().isEmpty();
        apellido_mat = apeMaternoTrabajadorTXT.getText().isEmpty();
        fecha_cont    = fecContratacionTrabajadorTXT.getText().isEmpty();

        boolean[] arraytxt = new boolean[]{rut, nombre, apellido_pat, apellido_mat, fecha_cont};
        for (boolean elemento : arraytxt) {
            if (elemento == true) {

            } else {
                contver++;

            }

        }
        return contver == 5;

    }
    
    public void limpiarTabla() {
       for (int i = 0; i < listaTrabajador.size(); i++) {
            listaTrabajador.remove(i);
        }    
    }
    
    public void mostrarTabla() {
        limpiarTabla();
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        manager.executeQueryConsultaLLenaTablaTrabajadores(listaTrabajador);
        manager.executeQueryConsultaLLenaTablaDireccionesTrabajadores(listaDireccionesTrabajadores);
        manager.executeQueryConsultaLLenaTablaTelefonosTrabajadores(listaTelefonosTrabajadores);
        manager.executeQueryConsultaLLenaTablaCorreosTrabajadores(listaCorreosTrabajadores);
        String matriz[][] = new String[listaTrabajador.size()][9];
        String direccionesTrabajadores = "";
        String telefonosTrabajadores = "";
        String correosTrabajadores = "";
        
        for (int i = 0; i < listaTrabajador.size(); i++) {

            String idtra        = Integer.toString(listaTrabajador.get(i).getId_trabajador());
            String fecha_cont    = Integer.toString(listaTrabajador.get(i).getFecha_cont());
            int idtraAux        = listaTrabajador.get(i).getId_trabajador();
            

            matriz[i][0] = idtra;
            matriz[i][1] = listaTrabajador.get(i).getRut();
            matriz[i][2] = listaTrabajador.get(i).getNombre();
            matriz[i][3] = listaTrabajador.get(i).getApellido_pat();
            matriz[i][4] = listaTrabajador.get(i).getApellido_mat();
            matriz[i][5] = fecha_cont;
            for (int j = 0; j < listaDireccionesTrabajadores.size(); j++) {
                if(idtraAux == listaDireccionesTrabajadores.get(j).getId_trabajador()){
                direccionesTrabajadores = direccionesTrabajadores+ " " +listaDireccionesTrabajadores.get(j).getDireccion()+ ",";
                }else{
                    break;
                }               
            }
            matriz[i][6] = direccionesTrabajadores;
            for (int j = 0; j < listaTelefonosTrabajadores.size(); j++) {
                if(idtraAux == listaTelefonosTrabajadores.get(j).getId_trabajador()){
                    telefonosTrabajadores = telefonosTrabajadores+ " " +Integer.toString(listaTelefonosTrabajadores.get(j).getTelefono())+ ",";
                }else{
                    break;
                }
            }
            matriz[i][7] = telefonosTrabajadores;
            for (int j = 0; j < listaCorreosTrabajadores.size(); j++) {
                if(idtraAux == listaCorreosTrabajadores.get(j).getId_trabajador()){
                    correosTrabajadores = correosTrabajadores+ " " +listaCorreosTrabajadores.get(j).getCorreo()+ ",";
                }else{
                    break;
                }
            }
            matriz[i][8] = correosTrabajadores;
        }
        tablaTrabajadoresTBL.setModel(new javax.swing.table.DefaultTableModel(
                matriz,
                new String[]{
                    "ID trabajador", "Rut", "Nombres", "Apellido paterno", "Apellido materno", "Fecha de contratación", "Dirección", "Teléfono", "E-mail"
                }
        ));

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vistaTrabajadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vistaTrabajadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vistaTrabajadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vistaTrabajadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vistaTrabajadores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarCorreoTrabajadorBTN;
    private javax.swing.JButton agregarDireccionTrabajadorBTN;
    private javax.swing.JButton agregarTelefonoTrabajadorBTN;
    private javax.swing.JButton agregarTrabajadorBTN;
    private javax.swing.JTextField apeMaternoTrabajadorTXT;
    private javax.swing.JTextField apePaternoTrabajadorTXT;
    private javax.swing.JTextField correoTrabajadorTXT;
    private javax.swing.JTextField direccionTrabajadorTXT;
    private javax.swing.JButton editarTrabajadorBTN;
    private javax.swing.JButton eliminarTrabajadorBTN;
    private javax.swing.JTextField fecContratacionTrabajadorTXT;
    private javax.swing.JTextField idTrabajadorTXT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomTrabajadorTXT;
    private javax.swing.JTextField rutTrabajadorTXT;
    private javax.swing.JButton salirTrabajadorBTN;
    private javax.swing.JTable tablaTrabajadoresTBL;
    private javax.swing.JTextField telefonoTrabajadorTXT;
    // End of variables declaration//GEN-END:variables
}
