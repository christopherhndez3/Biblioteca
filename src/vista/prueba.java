/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.MySQLManager;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Autor;
import modelo.Categoria;
import modelo.Editorial;
import modelo.CategoriaLibroEnlace;
import modelo.Compra;
import modelo.Distribuidor;
import modelo.Factura;
import modelo.Idioma;
import modelo.IdiomaLibroEnlace;
import modelo.Libro;
import modelo.LibroAutorEnlace;

/**
 *
 * @author Gn3p
 */
public class prueba extends javax.swing.JFrame {

    /**
     * Creates new form prueba
     */
    /**
     * Se definen los ArrayLists
     *
     */
    ArrayList<Autor> listaAutorLibro = new ArrayList<>();
    ArrayList<Editorial> listaEditorialLibro = new ArrayList<>();
    ArrayList<Categoria> listaCategoriaLibro = new ArrayList<>();
    ArrayList<Idioma> listaIdiomaLibro = new ArrayList<>();
    ArrayList<Libro> listaLibro = new ArrayList<>();
    ArrayList<Libro> listaLibroFactura = new ArrayList<>();
    ArrayList<LibroAutorEnlace> listaAutorLibroEnlace = new ArrayList<>();
    ArrayList<LibroAutorEnlace> listaAutorLibroEnlaceFactura = new ArrayList<>();
    ArrayList<IdiomaLibroEnlace> listaIdiomaLibroEnlace = new ArrayList<>();
    ArrayList<IdiomaLibroEnlace> listaIdiomaLibroEnlaceFactura = new ArrayList<>();
    ArrayList<CategoriaLibroEnlace> listaCategoriaLibroEnlace = new ArrayList<>();
    ArrayList<CategoriaLibroEnlace> listaCategoriaLibroEnlaceFactura = new ArrayList<>();
    ArrayList<Distribuidor> listaDistribuidores = new ArrayList<>();
    ArrayList<Factura> listaFacturas = new ArrayList<>();
    int idlibrofactura = 0;

    public prueba() {
        initComponents();
        mostrarTabla();
        //mostrarTablaFactura();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        libros = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        agregarNuevoAutorBTN = new javax.swing.JButton();
        agregarCategoriaBTN = new javax.swing.JButton();
        categoriasLBL = new javax.swing.JLabel();
        agregarNuevaEditorialBTN = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tituloTXT = new javax.swing.JTextField();
        isbnTXT = new javax.swing.JTextField();
        numeroSerieTXT = new javax.swing.JTextField();
        numeroDePaginasTXT = new javax.swing.JTextField();
        precioReferencialTXT = new javax.swing.JTextField();
        eliminarLibroBTN = new javax.swing.JButton();
        editarLibroBTN = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        distribuidoresBTN = new javax.swing.JButton();
        nombreAutorLBL = new javax.swing.JLabel();
        idiomasLBL = new javax.swing.JLabel();
        agregarIdiomaBTN = new javax.swing.JButton();
        editorialLBL = new javax.swing.JLabel();
        categoriaALibroTXT = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        agregarEditorialALibroBTN = new javax.swing.JButton();
        idAutorTXT = new javax.swing.JTextField();
        agregarAutorALibroBTN = new javax.swing.JButton();
        agregarCategoriaALibroBTN = new javax.swing.JButton();
        idEditorialTXT = new javax.swing.JTextField();
        ididiomaLibroTXT = new javax.swing.JTextField();
        agregarIdiomaALibroBTN = new javax.swing.JButton();
        verFactura = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        anhoPublicacionTXT = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        nuevafacturaTBL = new javax.swing.JTable();
        confirmarlibrofacturaBTN = new javax.swing.JButton();
        metodoPagoTXT = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        iddistribuidoraTXT = new javax.swing.JTextField();
        numerofolioTXT = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        idlibroTXT = new javax.swing.JTextField();
        nuevoLibroBTN = new javax.swing.JButton();
        venderlibroBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        libros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id de libro", "Editorial", "Autor", "Categoría/as", "Idioma", "Título", "ISBN", "Número de serie", "Número de página", "Precio referencial"
            }
        ));
        jScrollPane1.setViewportView(libros);

        jLabel2.setText("Agregar Autor por id");

        jLabel3.setText("Agregar Categoria por ID");

        jLabel4.setText("Agregar Idioma por ID");

        agregarNuevoAutorBTN.setText("Agregar nuevo autor");
        agregarNuevoAutorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarNuevoAutorBTNActionPerformed(evt);
            }
        });

        agregarCategoriaBTN.setText("Agregar categoría");
        agregarCategoriaBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCategoriaBTNActionPerformed(evt);
            }
        });

        categoriasLBL.setText("Categorias Agregadas");

        agregarNuevaEditorialBTN.setText("Agregar nueva editorial");
        agregarNuevaEditorialBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarNuevaEditorialBTNActionPerformed(evt);
            }
        });

        jLabel5.setText("Título");

        jLabel6.setText("ISBN");

        jLabel8.setText("Número de serie");

        jLabel9.setText("Número de páginas");

        jLabel10.setText("Precio referencial");

        eliminarLibroBTN.setText("Eliminar libro");

        editarLibroBTN.setText("Editar libro");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Generador de Solicitudes de libros a distribuidores ");

        distribuidoresBTN.setText("Menú de distribuidores");
        distribuidoresBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distribuidoresBTNActionPerformed(evt);
            }
        });

        nombreAutorLBL.setText("Nombre Autores");

        idiomasLBL.setText("Idiomas Agregados");

        agregarIdiomaBTN.setText("Agregar idioma");
        agregarIdiomaBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarIdiomaBTNActionPerformed(evt);
            }
        });

        editorialLBL.setText("Nombre Editorial");

        jLabel12.setText("Agregar editorial por id");

        agregarEditorialALibroBTN.setText("Agregar Editorial");
        agregarEditorialALibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarEditorialALibroBTNActionPerformed(evt);
            }
        });

        agregarAutorALibroBTN.setText("Agregar Autores");
        agregarAutorALibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarAutorALibroBTNActionPerformed(evt);
            }
        });

        agregarCategoriaALibroBTN.setText("Agregar Categorias");
        agregarCategoriaALibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarCategoriaALibroBTNActionPerformed(evt);
            }
        });

        ididiomaLibroTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ididiomaLibroTXTActionPerformed(evt);
            }
        });

        agregarIdiomaALibroBTN.setText("Agregar Idiomas");
        agregarIdiomaALibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarIdiomaALibroBTNActionPerformed(evt);
            }
        });

        verFactura.setText("Ver Facturas");

        jLabel1.setText("Anho publicacion");

        nuevafacturaTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Libro", "Editorial", "Autor", "Categorias", "Idioma", "Titulo", "ISBN", "Numero de Serie", "Numero de Paginas", "Precio Referencial", "Valor sin IVA", "Valor con IVA", "Distribuidora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(nuevafacturaTBL);
        if (nuevafacturaTBL.getColumnModel().getColumnCount() > 0) {
            nuevafacturaTBL.getColumnModel().getColumn(0).setHeaderValue("Id Libro");
            nuevafacturaTBL.getColumnModel().getColumn(1).setHeaderValue("Editorial");
            nuevafacturaTBL.getColumnModel().getColumn(2).setHeaderValue("Autor");
            nuevafacturaTBL.getColumnModel().getColumn(3).setHeaderValue("Categorias");
            nuevafacturaTBL.getColumnModel().getColumn(4).setHeaderValue("Idioma");
            nuevafacturaTBL.getColumnModel().getColumn(5).setHeaderValue("Titulo");
            nuevafacturaTBL.getColumnModel().getColumn(6).setHeaderValue("ISBN");
            nuevafacturaTBL.getColumnModel().getColumn(7).setHeaderValue("Numero de Serie");
            nuevafacturaTBL.getColumnModel().getColumn(8).setHeaderValue("Numero de Paginas");
            nuevafacturaTBL.getColumnModel().getColumn(9).setHeaderValue("Precio Referencial");
            nuevafacturaTBL.getColumnModel().getColumn(10).setHeaderValue("Valor sin IVA");
            nuevafacturaTBL.getColumnModel().getColumn(11).setHeaderValue("Valor con IVA");
            nuevafacturaTBL.getColumnModel().getColumn(12).setHeaderValue("Distribuidora");
        }

        confirmarlibrofacturaBTN.setText("Confirmar nuevo libro en factura");
        confirmarlibrofacturaBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarlibrofacturaBTNActionPerformed(evt);
            }
        });

        metodoPagoTXT.setText("Proceder a pago");
        metodoPagoTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodoPagoTXTActionPerformed(evt);
            }
        });

        jLabel13.setText("Folio:");

        jLabel7.setText("Ingrese el id de la distribuidora");

        iddistribuidoraTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iddistribuidoraTXTActionPerformed(evt);
            }
        });

        jLabel14.setText("ID libro");

        idlibroTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idlibroTXTActionPerformed(evt);
            }
        });

        nuevoLibroBTN.setText("Nuevo libro");
        nuevoLibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoLibroBTNActionPerformed(evt);
            }
        });

        venderlibroBTN.setText("Vender Libro");
        venderlibroBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venderlibroBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(agregarNuevaEditorialBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarNuevoAutorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarCategoriaBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarIdiomaBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(distribuidoresBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(verFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(venderlibroBTN)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(anhoPublicacionTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel10)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(precioReferencialTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(130, 130, 130)
                                                .addComponent(idAutorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(25, 25, 25)
                                                .addComponent(ididiomaLibroTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)
                                                .addComponent(agregarIdiomaALibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel14)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(idlibroTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(nuevoLibroBTN))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel12)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel3))
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGap(84, 84, 84)
                                                            .addComponent(agregarAutorALibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addComponent(categoriaALibroTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(agregarCategoriaALibroBTN))
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGap(6, 6, 6)
                                                            .addComponent(idEditorialTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(agregarEditorialALibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel8)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel5))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(tituloTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(isbnTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(numeroSerieTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(numeroDePaginasTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(104, 104, 104)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(nombreAutorLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(editorialLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(editarLibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(eliminarLibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(confirmarlibrofacturaBTN))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(114, 114, 114)
                                        .addComponent(categoriasLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(115, 115, 115)
                                        .addComponent(idiomasLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1089, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jLabel13)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(numerofolioTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(iddistribuidoraTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1089, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(metodoPagoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 1472, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarNuevaEditorialBTN)
                    .addComponent(agregarNuevoAutorBTN)
                    .addComponent(agregarCategoriaBTN)
                    .addComponent(agregarIdiomaBTN)
                    .addComponent(distribuidoresBTN)
                    .addComponent(verFactura)
                    .addComponent(venderlibroBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(idlibroTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nuevoLibroBTN))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(tituloTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(isbnTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(numeroSerieTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(numeroDePaginasTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(precioReferencialTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(anhoPublicacionTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(288, 288, 288)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(iddistribuidoraTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numerofolioTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(idEditorialTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarEditorialALibroBTN))
                        .addGap(2, 2, 2)
                        .addComponent(editorialLBL)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(idAutorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarAutorALibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(nombreAutorLBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(categoriaALibroTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarCategoriaALibroBTN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categoriasLBL)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(agregarIdiomaALibroBTN)
                            .addComponent(ididiomaLibroTXT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idiomasLBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmarlibrofacturaBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editarLibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eliminarLibroBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(metodoPagoTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void agregarAutorALibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarAutorALibroBTNActionPerformed
        // TODO add your handling code here:
        // Este metodo agregara un autor al arraylist de listadistribuidores factura
        //Se inicializa un objeto de autor
        LibroAutorEnlace a = new LibroAutorEnlace();
        Autor autor = new Autor();
        //variable contenedora del id Autor y id libro
        int id_autor;
        int id_libro;
        String nombre;
        String apellido;
        String autores = "";
        //Se obtiene la variable del formulario
        id_libro = Integer.parseInt(idlibroTXT.getText());
        id_autor = Integer.parseInt(idAutorTXT.getText());
        a.setId_autor(id_autor);
        a.setId_libro(id_libro);
        //Se hace la query que llama al autor requerido
        //Se inicializa el objeto manager con lel pool de conexion
        //ySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        //el objeto de autor es igual a la consulta ejecutada

        //Se agrega el objeto A la lista de autores de la factura
        listaAutorLibroEnlaceFactura.add(a);
        for (int i = 0; i < listaAutorLibro.size(); i++) {
            if (listaAutorLibro.get(i).getId_autor() == id_autor) {
                nombre = listaAutorLibro.get(i).getNombre();
                apellido = listaAutorLibro.get(i).getAp_pat();
                autores = autores.concat(nombre + " " + apellido);
            }
        }
        System.out.println(autores);
        nombreAutorLBL.setText(autores);
        mostrarTablaFactura();


    }//GEN-LAST:event_agregarAutorALibroBTNActionPerformed

    private void agregarCategoriaALibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCategoriaALibroBTNActionPerformed
        // TODO add your handling code here:

        CategoriaLibroEnlace a = new CategoriaLibroEnlace();

        int id_libro;
        int id_categoria;
        String nombre = "";

        id_libro = Integer.parseInt(idlibroTXT.getText());
        id_categoria = Integer.parseInt(categoriaALibroTXT.getText());
//        String query = "SELECT `id_cat`, `nom_cat` FROM `categorias` WHERE `id_cat`=" + id_categoria;
//        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        a.setId_cat(id_categoria);
        a.setId_libro(id_libro);
        listaCategoriaLibroEnlaceFactura.add(a);

        for (int i = 0; i < listaCategoriaLibro.size(); i++) {
            if (listaCategoriaLibro.get(i).getId_cat() == a.getId_cat()) {
                nombre = nombre.concat(listaCategoriaLibro.get(i).getNom_cat());

            }
        }
        categoriasLBL.setText(nombre);
        mostrarTablaFactura();


    }//GEN-LAST:event_agregarCategoriaALibroBTNActionPerformed

    private void agregarNuevaEditorialBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarNuevaEditorialBTNActionPerformed
        // TODO add your handling code here:
        new vistaEditorial().setVisible(true);
    }//GEN-LAST:event_agregarNuevaEditorialBTNActionPerformed

    private void agregarNuevoAutorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarNuevoAutorBTNActionPerformed
        // TODO add your handling code here:
        new vistaAutor().setVisible(true);
    }//GEN-LAST:event_agregarNuevoAutorBTNActionPerformed

    private void agregarCategoriaBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarCategoriaBTNActionPerformed
        // TODO add your handling code here:
        new vistaCategorias().setVisible(true);


    }//GEN-LAST:event_agregarCategoriaBTNActionPerformed

    private void agregarIdiomaBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarIdiomaBTNActionPerformed
        // TODO add your handling code here:
        new vistaIdiomas().setVisible(true);
    }//GEN-LAST:event_agregarIdiomaBTNActionPerformed

    private void distribuidoresBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distribuidoresBTNActionPerformed
        // TODO add your handling code here:
        new vistaDistribuidor().setVisible(true);
    }//GEN-LAST:event_distribuidoresBTNActionPerformed

    private void agregarEditorialALibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarEditorialALibroBTNActionPerformed
        // TODO add your handling code here:

        Editorial a = new Editorial();
        Libro libro = new Libro();
        String stringvacio = "";
        int id_editorial;
        int id_libro;
        editorialLBL.setText(stringvacio);
        System.out.println(a.getNom_editorial());

        id_editorial = Integer.parseInt(idEditorialTXT.getText());
        String query = "SELECT `id_editorial`, `nom_editorial` FROM `editorial` WHERE `id_editorial`=" + id_editorial;
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        a = manager.executeQueryConsultaEditorial(query);
        //Debo de agregar la editorial al objeto libro factura
        //editoria
        id_libro = Integer.parseInt(idlibroTXT.getText());
        libro.setId_libro(id_libro);
        libro.setId_editorial(a.getId_editorial());
        editorialLBL.setText(stringvacio);
        System.out.println(a.getNom_editorial());

        for (int i = 0; i < listaLibroFactura.size(); i++) {
            System.out.println("Comparando id libro de la lista de factura :" + listaLibroFactura.get(i).getId_libro() + "Con :" + libro.getId_libro());
            if (listaLibroFactura.get(i).getId_libro() == libro.getId_libro()) {
                System.out.println("Cambiando la lista libro factura: " + id_libro);
                listaLibroFactura.get(i).setId_editorial(id_editorial);
                System.out.println("Cambiando la lista libro factura: " + listaLibroFactura.get(i).getId_editorial() + "id libro" + listaLibroFactura.get(i).getId_libro());
                editorialLBL.setText(a.getNom_editorial());
            }

        }
        mostrarTablaFactura();


    }//GEN-LAST:event_agregarEditorialALibroBTNActionPerformed

    private void agregarIdiomaALibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarIdiomaALibroBTNActionPerformed
        // TODO add your handling code here:

        IdiomaLibroEnlace a = new IdiomaLibroEnlace();
        String idioma = "";
        int id_libro;
        int id_idioma;

        id_libro = Integer.parseInt(idlibroTXT.getText());
        id_idioma = Integer.parseInt(ididiomaLibroTXT.getText());

        a.setId_idioma(id_idioma);
        a.setId_libro(id_libro);
        listaIdiomaLibroEnlaceFactura.add(a);
        for (int i = 0; i < listaIdiomaLibro.size(); i++) {
            if (listaCategoriaLibro.get(i).getId_cat() == a.getId_idioma()) {
                idioma = idioma.concat(listaIdiomaLibro.get(i).getNom_idioma());

            }
        }
        idiomasLBL.setText(idioma);
        mostrarTablaFactura();


    }//GEN-LAST:event_agregarIdiomaALibroBTNActionPerformed

    private void ididiomaLibroTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ididiomaLibroTXTActionPerformed

    }//GEN-LAST:event_ididiomaLibroTXTActionPerformed

    private void confirmarlibrofacturaBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarlibrofacturaBTNActionPerformed
        //Que lindo era cuando este boton no hacia nada jiji
        boolean campovacio = false;
        for (int i = 0; i < listaLibroFactura.size(); i++) {
            Libro libro = listaLibroFactura.get(i);
            if (libro.getId_editorial() == 0) {
                campovacio = true;

            }

        }
        for (int i = 0; i < listaAutorLibroEnlaceFactura.size(); i++) {
            LibroAutorEnlace enlace = listaAutorLibroEnlaceFactura.get(i);
            if (enlace.getId_libro() == 0) {
                campovacio = true;
            }

        }
        for (int i = 0; i < listaIdiomaLibroEnlaceFactura.size(); i++) {
            IdiomaLibroEnlace enlace = listaIdiomaLibroEnlaceFactura.get(i);
            if (enlace.getId_libro() == 0) {
                campovacio = true;

            }

        }
        for (int i = 0; i < listaCategoriaLibroEnlaceFactura.size(); i++) {
            CategoriaLibroEnlace enlace = listaCategoriaLibroEnlaceFactura.get(i);
            if (enlace.getId_libro() == 0) {
                campovacio = true;

            }

        }
        if (campovacio) {
            System.out.println("Rellena todas las variables");
            

        } else {

        }
        nuevoLibroBTN.setEnabled(true);

        idlibroTXT.setText(Integer.toString(idlibrofactura));
    }//GEN-LAST:event_confirmarlibrofacturaBTNActionPerformed

    public void mostrarTablaFactura() {
        //Limpiamos las listas que contienen todas los datos
        listaAutorLibro.removeAll(listaAutorLibro);
        listaEditorialLibro.removeAll(listaEditorialLibro);
        listaCategoriaLibro.removeAll(listaCategoriaLibro);
        listaIdiomaLibro.removeAll(listaIdiomaLibro);
        listaLibro.removeAll(listaLibro);

        //Se llenan las listas
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        manager.executeQueryConsultaLLenaTablaAutores(listaAutorLibro);
        manager.executeQueryConsultaLLenaTablaCategoria(listaCategoriaLibro);
        manager.executeQueryConsultaLLenaTablaEditoriales(listaEditorialLibro);
        manager.executeQueryConsultaLLenaTablaIdioma(listaIdiomaLibro);
        manager.executeQueryConsultaLLenaTablaLibro(listaLibro);
        manager.executeQueryConsultaLLenaListaCategoriaLibroEnlace(listaCategoriaLibroEnlace);
        manager.executeQueryConsultaLLenaListaIdiomaLibroEnlace(listaIdiomaLibroEnlace);
        manager.executeQueryConsultaLLenaListaLibroAutorEnlace(listaAutorLibroEnlace);
        //Creamos el String[] que contiene las columnas
        String[] columnas = {"Id Libro", "Editorial", "Autor", "Categorias", "Idioma", "Titulo", "ISBN", "Numero de Serie", "Numero de Paginas", "Precio Referencial", "Valor IVA", "Valor con IVA"};
        //Se define la matriz que contiene la informacion
        String matriz[][] = new String[listaLibroFactura.size()][13];
        //Se definen las variables auxiliares que contendrán la Editorial, Autor, Categoria e Idioma 
        String editorial = "";
        String autor = "";
        String categoria = "";
        String idioma = "";
        
        //Tengo que determinar cual será el tamaño de la lista y por consecuente cual será el id del siguiente libro
 
        //tengo que saber si el contador de libro nuevo está en 1 para poder decidir el tamaño de la lista que corresponda
        
        System.out.println("tamaño de la lista libro factura" + listaLibroFactura.size() + " contador nuevo libro");

        for (int i = 0; i < listaLibroFactura.size(); i++) {
            Libro libro = new Libro();
            System.out.println("Libro actual :" + libro.getId_libro() + "Titulo" + libro.getTitulo() + "Año publicado" + libro.getAnho_publ() + "Estado" + libro.getEstado());

            libro = listaLibroFactura.get(i);
            System.out.println("Id libro Actual" + listaLibroFactura.get(i).getId_libro());

            String precio_ref = Integer.toString(listaLibroFactura.get(i).getPrecio_ref());

            System.out.println("Agregando Id libro ->" + listaLibroFactura.get(i).getId_libro());
            String id_libro = Integer.toString(listaLibroFactura.get(i).getId_libro());

            String valor_iva = Double.toString(listaLibroFactura.get(i).getPrecio_ref() * 0.19);
            String precio_iva = Double.toString(listaLibroFactura.get(i).getPrecio_ref() + listaLibroFactura.get(i).getPrecio_ref() * 0.19);
            matriz[i][0] = id_libro;

            System.out.println("Agregando Id editorial ->" + listaLibroFactura.get(i).getId_editorial());
            for (int h = 0; h < listaEditorialLibro.size(); h++) {
                if (listaLibroFactura.get(i).getId_editorial() == listaEditorialLibro.get(h).getId_editorial()) {
                    editorial = editorial.concat(listaEditorialLibro.get(h).getNom_editorial());
                }
            }
            matriz[i][1] = editorial;

            System.out.println("Aqui-> adelante pasele mijo........Tamaño de la lista autorenlacefactura :" + listaAutorLibroEnlaceFactura.size());
            for (int j = 0; j < listaAutorLibroEnlaceFactura.size(); j++) {
                System.out.println("Fuera del For:");
                //System.out.println("Id libro a comparar ->" + libro.getId_libro() + "ii libro en lista enlace" + listaAutorLibroEnlaceFactura.get(i).getId_libro());
                if (libro.getId_libro() == listaAutorLibroEnlaceFactura.get(j).getId_libro()) {

                    int idautor = listaAutorLibroEnlaceFactura.get(j).getId_autor();
                    System.out.println("Id autor obtenido desde el if :" + idautor);
                    //Saqué la id del autor, hay que compararla con la id de la lista autores libros.
                    //Haré un for con toda la lista de autores y por cada autor que sea igual al id autor
                    //Se agregan y se concatenan en la tabla
                    //succes!!

                    for (int n = 0; n < listaAutorLibro.size(); n++) {
                        System.out.println("Id autor a comparar :" + listaAutorLibro.get(n).getId_autor());
                        if (idautor == listaAutorLibro.get(n).getId_autor()) {

                            System.out.println(listaAutorLibro.get(n).getNombre());
                            String nombre = listaAutorLibro.get(n).getNombre();
                            String apellido = listaAutorLibro.get(n).getAp_pat();
                            autor = autor.concat(nombre + " " + apellido);
                            System.out.println(autor);
                        }

                    }

                }

            }
            matriz[i][2] = autor;
            //Que divertido es programar a las 3 am...
            //y heme aqui demostrando que existo en 5 dimensiones, quiza cuantas mas hay?
            //quizá en algun futuro cercano estaré hablando con una IA a travez de los comentarios de mis programas
            //Se defineagregan las categorias...
            System.out.println();
            System.out.println("Tamaño de la lista de categoria libroenlace" + listaCategoriaLibroEnlaceFactura.size());
            for (int k = 0; k < listaCategoriaLibroEnlaceFactura.size(); k++) {
                System.out.println("ID de libro actual:->" + libro.getId_libro() + "id de libro a comparar:" + listaCategoriaLibroEnlaceFactura.get(k).getId_libro());

                if (libro.getId_libro() == listaCategoriaLibroEnlaceFactura.get(k).getId_libro()) {
                    int idcat = listaCategoriaLibroEnlaceFactura.get(k).getId_cat();
                    System.out.println("Id de categoria a comparar: " + idcat);

                    for (int l = 0; l < listaCategoriaLibro.size(); l++) {
                        System.out.println("Id categoria obtenido desde la lista" + listaCategoriaLibro.get(l).getId_cat());
                        if (idcat == listaCategoriaLibro.get(l).getId_cat()) {
                            System.out.println("Categoria encontrada: " + listaCategoriaLibro.get(l).getNom_cat());
                            categoria = categoria.concat(listaCategoriaLibro.get(l).getNom_cat());
                            System.out.println(categoria);
                        }

                    }

                }
            }
            matriz[i][3] = categoria;

            //Mas de lo mismo con idiomas
            System.out.println("Tamaño de la lista de idioma libroenlace" + listaIdiomaLibroEnlaceFactura.size());
            for (int m = 0; m < listaIdiomaLibroEnlaceFactura.size(); m++) {

                if (libro.getId_libro() == listaIdiomaLibroEnlaceFactura.get(m).getId_libro()) {
                    int ididioma = listaIdiomaLibroEnlaceFactura.get(m).getId_idioma();

                    for (int l = 0; l < listaIdiomaLibro.size(); l++) {
                        if (ididioma == listaIdiomaLibro.get(l).getId_idioma()) {
                            idioma = idioma.concat(listaIdiomaLibro.get(l).getNom_idioma());
                            System.out.println(idioma);
                        }
                    }

                }
            }
            matriz[i][4] = idioma;
            matriz[i][5] = listaLibroFactura.get(i).getTitulo();
            matriz[i][6] = listaLibroFactura.get(i).getIsbn();
            matriz[i][7] = Integer.toString(listaLibroFactura.get(i).getNum_serie());
            matriz[i][8] = Integer.toString(listaLibroFactura.get(i).getNum_pag());
            matriz[i][9] = precio_ref;
            matriz[i][10] = valor_iva;
            matriz[i][11] = precio_iva;
        }

        //Agregamos datos al DT  
        DefaultTableModel dt = new DefaultTableModel(matriz, columnas);

        nuevafacturaTBL.setModel(dt);

    }
    private void metodoPagoTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodoPagoTXTActionPerformed

        Factura factura = new Factura();
        int id_distribuidor;
        id_distribuidor = Integer.parseInt(iddistribuidoraTXT.getText());
        factura.setId_dist(id_distribuidor);
        int folio = Integer.parseInt(numerofolioTXT.getText());
        String fecha;
        double precio_total;
        double precio_neto = 0;
        double precio_iva = 0;
        for (int i = 0; i < listaLibroFactura.size(); i++) {
            precio_neto = precio_neto + listaLibroFactura.get(i).getPrecio_ref();
        }
        for (int i = 0; i < listaLibroFactura.size(); i++) {
            precio_iva = precio_iva + listaLibroFactura.get(i).getPrecio_ref() * 0.19;

        }
        precio_total = precio_neto + precio_iva;

        factura.setFolio(folio);
        factura.setCosto_iva(precio_iva);
        factura.setPrecio_neto(precio_neto);
        factura.setPrecio_iva(precio_total);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
        fecha = dtf.format(LocalDateTime.now());
        System.out.println(fecha);
        factura.setFecha_compra(fecha);

        int seleccion = JOptionPane.showOptionDialog(null, "Seleccione una opcion",
                "Selector de opciones", JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE, null,// null para icono por defecto.
                new Object[]{"Efectivo", "Débito", "Crédito",}, "opcion 1");

        if (seleccion == 0) {

            JOptionPane.showMessageDialog(null, "Ha pagado con efectivo, muchas gracias.");
            factura.setMetodo_pago(1);
        } else if (seleccion == 1) {

            JOptionPane.showMessageDialog(null, "Ha pagado con tarjeta de débito, muchas gracias.");
            factura.setMetodo_pago(2);
        } else {

            JOptionPane.showMessageDialog(null, "Ha pagado con tarjeta de crédito, muchas gracias.");
            factura.setMetodo_pago(3);
        }
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        //listaLibroFactura = manager.executeQueryConsultaLLenaTablaLibro(listaLibroFactura);

        int id_libro = 0;
        int id_editorial = 0;
        int num_serie;
        String isbn;
        String titulo;
        int num_pag = 0;
        int precio_ref;
        int anho_publi;
        int estado;

        for (int a = 0; a < listaLibroFactura.size(); a++) {
            Libro libro = new Libro();
            id_libro = listaLibroFactura.get(a).getId_libro();
            id_editorial = listaLibroFactura.get(a).getId_editorial();
            num_serie = listaLibroFactura.get(a).getNum_serie();
            isbn = listaLibroFactura.get(a).getIsbn();
            titulo = listaLibroFactura.get(a).getTitulo();
            precio_ref = listaLibroFactura.get(a).getPrecio_ref();
            anho_publi = listaLibroFactura.get(a).getAnho_publ();
            estado = listaLibroFactura.get(a).getEstado();
            num_pag =listaLibroFactura.get(a).getNum_pag();
            libro.agregarLibro(id_editorial, num_serie, num_pag, isbn, titulo, precio_ref, anho_publi, estado);

        }
        LibroAutorEnlace en = new LibroAutorEnlace();
        for (int b = 0; b < listaAutorLibroEnlaceFactura.size(); b++) {
            en.agregaRelacion(listaAutorLibroEnlaceFactura.get(b).getId_libro(), listaAutorLibroEnlaceFactura.get(b).getId_autor());

        }
        CategoriaLibroEnlace encl = new CategoriaLibroEnlace();
        for (int c = 0; c < listaCategoriaLibroEnlaceFactura.size(); c++) {
            encl.agregaRelacion(listaCategoriaLibroEnlaceFactura.get(c).getId_libro(), listaCategoriaLibroEnlaceFactura.get(c).getId_cat());
        }

        IdiomaLibroEnlace auid = new IdiomaLibroEnlace();

        for (int d = 0; d < listaCategoriaLibroEnlaceFactura.size(); d++) {
            auid.agregaRelacion(listaIdiomaLibroEnlaceFactura.get(d).getId_libro(),listaIdiomaLibroEnlaceFactura.get(d).getId_idioma());
        }
        factura.agregarFactura(factura.getFolio(), factura.getPrecio_neto(),factura.getPrecio_iva(),factura.getCosto_iva(),factura.getFecha_compra(),factura.getId_dist(),factura.getMetodo_pago());
        listaFacturas=manager.executeQueryConsultaLLenaTablaFactura(listaFacturas);
        
        int id_factura = listaFacturas.get(listaFacturas.size()-1).getId_factura();
        System.out.println("Id Factura:"+id_factura);
        int a=0 ;
        for (Libro l : listaLibroFactura) {
            Compra compra = new Compra();
           
            id_libro = listaLibroFactura.get(a).getId_libro();
            compra.setId_libro(id_libro);
            compra.setId_distribuidor(id_distribuidor);
            compra.setId_factura(id_factura);
            compra.agregarCompra(id_libro, id_libro, id_factura);
            a++;
        }
        listaLibroFactura.removeAll(listaLibroFactura);
        
        mostrarTablaFactura();
        mostrarTabla();
        
        
        
        
        
    }//GEN-LAST:event_metodoPagoTXTActionPerformed

    private void idEditorialTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idEditorialTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_idEditorialTXTKeyTyped

    private void idAutorTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idAutorTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_idAutorTXTKeyTyped

    private void categoriaALibroTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoriaALibroTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_categoriaALibroTXTKeyTyped

    private void idiomaLibroTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idiomaLibroTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_idiomaLibroTXTKeyTyped

    private void tituloTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tituloTXTKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c > ' ') && (c < 'á' || c > 'ú') && (c < 'Á' || c > 'Ú')) {
            evt.consume();
        }
    }//GEN-LAST:event_tituloTXTKeyTyped

    private void isbnTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_isbnTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_isbnTXTKeyTyped

    private void numeroSerieTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroSerieTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_numeroSerieTXTKeyTyped

    private void numeroDePaginasTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDePaginasTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_numeroDePaginasTXTKeyTyped

    private void precioReferencialTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioReferencialTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_precioReferencialTXTKeyTyped

    private void anhoPublicacionTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anhoPublicacionTXTKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_anhoPublicacionTXTKeyTyped

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void iddistribuidoraTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iddistribuidoraTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iddistribuidoraTXTActionPerformed

    private void nuevoLibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoLibroBTNActionPerformed
        //Necesito llenar el arraylist de libros
        //Inicializo el objeto de manager sql para obtenerlo
        //MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        //llenar el arraylist de libros
        //manager.executeQueryConsultaLLenaTablaLibro(listaLibro);
        //Obtengo el ultimo indice de la lista
        
        int id_libro; 
        idlibrofactura++;
        id_libro= idlibrofactura;
        

       
        Libro libro = new Libro();
        libro.setId_libro(id_libro);
        //Se obtienen las variables desde el formulario

        int num_serie = Integer.parseInt(numeroSerieTXT.getText());
        int num_pag = Integer.parseInt(numeroDePaginasTXT.getText());
        String isbn = isbnTXT.getText();
        String titulo = tituloTXT.getText();
        int precio_ref = Integer.parseInt(precioReferencialTXT.getText());
        int anho_publ = Integer.parseInt(anhoPublicacionTXT.getText());
        int estado = 1;
        //Llenamos libro

        libro.setNum_pag(num_pag);
        libro.setAnho_publ(anho_publ);
        libro.setTitulo(titulo);
        libro.setNum_serie(num_serie);
        libro.setIsbn(isbn);
        libro.setPrecio_ref(precio_ref);
        libro.setEstado(estado);
        System.out.println("id:" + libro.getId_libro() + "titulo :" + libro.getTitulo() + "anho publicacion" + libro.getAnho_publ());
        idlibroTXT.setText("");
        idlibroTXT.setText(Integer.toString(libro.getId_libro()));
        idlibroTXT.setEditable(false);
        listaLibroFactura.add(libro);

        nuevoLibroBTN.setEnabled(false);
        for (int i = 0; i < listaLibroFactura.size(); i++) {
            System.out.println(listaLibroFactura.get(i).getTitulo());
            System.out.println(listaLibroFactura.get(i).getId_libro());

        }

        mostrarTablaFactura();

    }//GEN-LAST:event_nuevoLibroBTNActionPerformed

    private void idlibroTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idlibroTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idlibroTXTActionPerformed

    private void venderlibroBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venderlibroBTNActionPerformed
        new ventaClientes().setVisible(true);
    }//GEN-LAST:event_venderlibroBTNActionPerformed
    public void mostrarTabla() {
        System.out.println("Mostrando Tabla de Libros");
        //Limpiamos las listas que contienen todas los datos
        listaAutorLibro.removeAll(listaAutorLibro);

        listaEditorialLibro.removeAll(listaEditorialLibro);
        listaCategoriaLibro.removeAll(listaCategoriaLibro);
        listaIdiomaLibro.removeAll(listaIdiomaLibro);
        listaLibro.removeAll(listaLibro);
        listaCategoriaLibroEnlace.removeAll(listaCategoriaLibroEnlace);
        listaAutorLibroEnlace.removeAll(listaAutorLibroEnlace);
        listaIdiomaLibroEnlace.removeAll(listaIdiomaLibroEnlace);
        //Se llenan las listas
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        manager.executeQueryConsultaLLenaTablaAutores(listaAutorLibro);
        //Consultar si la lista de libros se encuentra vacia

        if (listaAutorLibro.isEmpty()) {
            System.out.println("No hay autores agregados a la lista ");
            nuevoLibroBTN.setEnabled(false);
        }

        manager.executeQueryConsultaLLenaTablaCategoria(listaCategoriaLibro);
        if (listaCategoriaLibro.isEmpty()) {
            System.out.println("No hay Categorias agregados a la lista ");
            nuevoLibroBTN.setEnabled(false);

        }

        manager.executeQueryConsultaLLenaTablaEditoriales(listaEditorialLibro);
        if (listaEditorialLibro.isEmpty()) {
            System.out.println("No hay Editoriales agregados a la lista ");
            nuevoLibroBTN.setEnabled(false);

        }
        manager.executeQueryConsultaLLenaTablaIdioma(listaIdiomaLibro);
        if (listaIdiomaLibro.isEmpty()) {
            System.out.println("No hay idiomas agregados a la lista ");
            nuevoLibroBTN.setEnabled(false);

        }
        manager.executeQueryConsultaLLenaTablaLibro(listaLibro);
        System.out.println("Tamaño de la listalibro :" + listaLibro.size());
        //Se define el tamaño de la lista dependiendo de que si el tamaño de la lista es =0
        

        manager.executeQueryConsultaLLenaListaCategoriaLibroEnlace(listaCategoriaLibroEnlace);

        manager.executeQueryConsultaLLenaListaIdiomaLibroEnlace(listaIdiomaLibroEnlace);

        manager.executeQueryConsultaLLenaListaLibroAutorEnlace(listaAutorLibroEnlace);

        //Se define la matriz que contiene la informacion
        String matriz[][] = new String[listaLibro.size()][10];
        //Se definen las columnas de la tabla
        String[] columnas = {"Id Libro", "Editorial", "Autor", "Categoria", "Idioma", "Titulo", "ISBN", "Numero de serie", "Num. de Paginas", "Precio Referencial"};
        //Este iterador llena la matriz que contiene los datos
        if (listaLibro.isEmpty()) {
            String[] columna = {"No hay libros en ", "la base de datos"};
            String[][] matrix = new String[1][1];
            DefaultTableModel dt = new DefaultTableModel(matrix, columna);
            libros.setModel(dt);

        } else {
            for (int i = 0; i < listaLibro.size(); i++) {
                //Se definen las variables auxiliares que contendrán la Editorial, Autor, Categoria e Idioma 
                String editorial = "";
                String autor = "";
                String categoria = "";
                String idioma = "";
                //Se definen variables auxiliares

                int idlibroaux;
                int idedaux;
                System.out.println(listaLibro.get(i).getId_libro());
                idlibroaux = listaLibro.get(i).getId_libro();
                idedaux = listaLibro.get(i).getId_editorial();
                //Se muestra por pantalla la vuelta el id actual y el id de editorial
                System.out.println("Vuelta: " + i);
                System.out.println("Id del libro actual : " + idlibroaux);
                System.out.println("Id de editorial de libro:" + idedaux);
                String idlibro = Integer.toString(listaLibro.get(i).getId_libro());
                String num_serie = Integer.toString(listaLibro.get(i).getNum_serie());
                String num_pag = Integer.toString(listaLibro.get(i).getNum_pag());
                String precio_ref = Integer.toString(listaLibro.get(i).getPrecio_ref());
                matriz[i][0] = idlibro;

                System.out.println("Iniciando carga de editoriales");
                System.out.println("Tamaño de la lista de editoriales: " + listaEditorialLibro.size());
                //Manejo de Editoriales, los cuales se obtienen desde lista editorial 
                for (int k = 0; k < listaEditorialLibro.size(); k++) {

                    System.out.println("Editoriales ->id actual:" + listaEditorialLibro.get(k).getId_editorial() + " id editorial de libro a comparar: " + idedaux);

                    if (listaEditorialLibro.get(k).getId_editorial() == idedaux) {
                        System.out.println("Editorial Agregada: " + listaEditorialLibro.get(k).getNom_editorial());
                        editorial = editorial.concat(listaEditorialLibro.get(k).getNom_editorial());
                        System.out.println(editorial);

                    }

                }

                matriz[i][1] = editorial;

                System.out.println("Iniciando carga de autores");
                System.out.println("Tamaño del array de listalibroenlace:" + listaAutorLibroEnlace.size());
                for (int j = 0; j < listaAutorLibroEnlace.size(); j++) {

                    System.out.println("Autores ->id actual: " + listaAutorLibroEnlace.get(j).getId_autor() + " id libro a comparar:" + idlibroaux);
                    if (listaAutorLibroEnlace.get(j).getId_libro() == idlibroaux) {
                        int idautor = listaAutorLibroEnlace.get(j).getId_autor();

                        //Saqué la id del autor, hay que compararla con la id de la lista autores libros.
                        //Haré un for con toda la lista de autores y por cada autor que sea igual al id autor
                        //Se agregan y se concatenan en la tabla
                        //succes!!
                        for (int n = 0; n < listaAutorLibro.size(); n++) {
                            if (idautor == listaAutorLibro.get(n).getId_autor()) {
                                System.out.println(listaAutorLibro.get(n).getNombre());
                                String nombre = listaAutorLibro.get(n).getNombre();
                                String apellido = listaAutorLibro.get(n).getAp_pat();
                                autor = autor.concat(nombre + " " + apellido);
                                System.out.println(autor);
                            }

                        }

                    }
                }
                matriz[i][2] = autor;
                System.out.println("Iniciando carga de Categorias");
                for (int l = 0; l < listaCategoriaLibro.size(); l++) {
                    System.out.println("Categoria -> id categoria libro a comparar:" + listaCategoriaLibro.get(l).getId_cat() + " id actual:" + idlibroaux);
                    if (idlibroaux == listaCategoriaLibroEnlace.get(l).getId_libro()) {

                        //Sacamos la id de la categoria lo que se compara con la lista de categoria
                        int idcategoria = listaCategoriaLibroEnlace.get(l).getId_cat();
                        for (int m = 0; m < listaCategoriaLibro.size(); m++) {
                            if (idcategoria == listaCategoriaLibroEnlace.get(m).getId_cat()) {
                                System.out.println(listaCategoriaLibro.get(m).getNom_cat());
                                categoria = categoria.concat(listaCategoriaLibro.get(m).getNom_cat());
                                System.out.println(categoria);
                            }

                        }

                    }

                }
                matriz[i][3] = categoria;
                for (int p = 0; p < listaIdiomaLibro.size(); p++) {
                    System.out.println("Idioma -> id libro a comparar: " + idlibroaux + ", id del idioma a comparar : " + listaIdiomaLibroEnlace.get(p).getId_libro());
                    if (idlibroaux == listaIdiomaLibroEnlace.get(p).getId_libro()) {
                        //Debo de concatenar el nombre a idioma String, pero primero debo de tener el id que lo sacaré de id libro
                        //
                        int ididioma = listaIdiomaLibroEnlace.get(p).getId_libro();
                        for (int q = 0; q < listaIdiomaLibro.size(); q++) {
                            if (ididioma == listaIdiomaLibro.get(q).getId_idioma()) {
                                System.out.println("Idioma: " + listaIdiomaLibro.get(q).getNom_idioma());
                                idioma = idioma.concat(listaIdiomaLibro.get(q).getNom_idioma());
                                System.out.println(idioma);
                            }
                        }

                    }
                }
                matriz[i][4] = idioma;
                matriz[i][5] = listaLibro.get(i).getTitulo();
                matriz[i][6] = listaLibro.get(i).getIsbn();
                matriz[i][7] = num_serie;
                matriz[i][8] = num_pag;
                matriz[i][9] = precio_ref;

            }
            DefaultTableModel dtm = new DefaultTableModel(matriz, columnas);
            libros.setModel(dtm);
        }
    }

    public void limpiarTabla() {
        for (int i = 0; i < listaLibro.size(); i++) {
            listaLibro.remove(i);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(prueba.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(prueba.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(prueba.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(prueba.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new prueba().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarAutorALibroBTN;
    private javax.swing.JButton agregarCategoriaALibroBTN;
    private javax.swing.JButton agregarCategoriaBTN;
    private javax.swing.JButton agregarEditorialALibroBTN;
    private javax.swing.JButton agregarIdiomaALibroBTN;
    private javax.swing.JButton agregarIdiomaBTN;
    private javax.swing.JButton agregarNuevaEditorialBTN;
    private javax.swing.JButton agregarNuevoAutorBTN;
    private javax.swing.JTextField anhoPublicacionTXT;
    private javax.swing.JTextField categoriaALibroTXT;
    private javax.swing.JLabel categoriasLBL;
    private javax.swing.JButton confirmarlibrofacturaBTN;
    private javax.swing.JButton distribuidoresBTN;
    private javax.swing.JButton editarLibroBTN;
    private javax.swing.JLabel editorialLBL;
    private javax.swing.JButton eliminarLibroBTN;
    private javax.swing.JTextField idAutorTXT;
    private javax.swing.JTextField idEditorialTXT;
    private javax.swing.JTextField iddistribuidoraTXT;
    private javax.swing.JTextField ididiomaLibroTXT;
    private javax.swing.JLabel idiomasLBL;
    private javax.swing.JTextField idlibroTXT;
    private javax.swing.JTextField isbnTXT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable libros;
    private javax.swing.JButton metodoPagoTXT;
    private javax.swing.JLabel nombreAutorLBL;
    private javax.swing.JTable nuevafacturaTBL;
    private javax.swing.JButton nuevoLibroBTN;
    private javax.swing.JTextField numeroDePaginasTXT;
    private javax.swing.JTextField numeroSerieTXT;
    private javax.swing.JTextField numerofolioTXT;
    private javax.swing.JTextField precioReferencialTXT;
    private javax.swing.JTextField tituloTXT;
    private javax.swing.JButton venderlibroBTN;
    private javax.swing.JButton verFactura;
    // End of variables declaration//GEN-END:variables
}
