/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.MySQLManager;
import modelo.Autor;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author Gn3p
 */
public class vistaAutor extends javax.swing.JFrame {

    ArrayList<Autor> listaAutor = new ArrayList<>();
    

    /**
     * Creates new form vistaEditorial
     */
    public vistaAutor() {
        initComponents();
        mostrarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nomTXT = new javax.swing.JTextField();
        finalizarAutorBTN = new javax.swing.JButton();
        agregarAutorBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        autorTBL = new javax.swing.JTable();
        editarAutorBTN = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ap_patTXT = new javax.swing.JTextField();
        ap_matTXT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        idTXT = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        seleccionarBTN = new javax.swing.JButton();
        borrarAutor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Men√∫ de autor");

        jLabel2.setText("Nombre de autor");

        nomTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomTXTActionPerformed(evt);
            }
        });
        nomTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nomTXTKeyTyped(evt);
            }
        });

        finalizarAutorBTN.setText("Finalizar");

        agregarAutorBTN.setText("Agregar nuevo autor");
        agregarAutorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarAutorBTNActionPerformed(evt);
            }
        });

        autorTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id de autor", "Nombre", "Apellido paterno", "Apellido materno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(autorTBL);

        editarAutorBTN.setText("Editar");
        editarAutorBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarAutorBTNActionPerformed(evt);
            }
        });

        jLabel3.setText("Apellido Paterno");

        jLabel4.setText("ApellidoMaterno");

        ap_patTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ap_patTXTKeyTyped(evt);
            }
        });

        ap_matTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ap_matTXTKeyTyped(evt);
            }
        });

        jLabel5.setText("Id De autor");

        idTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idTXTKeyTyped(evt);
            }
        });

        jLabel6.setText("El id solo es necesario a la hora de editar un autor");

        seleccionarBTN.setText("Seleccionar");

        borrarAutor.setText("Borrar autor");
        borrarAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarAutorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(47, 47, 47)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(idTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ap_patTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ap_matTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nomTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(seleccionarBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(borrarAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(agregarAutorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(editarAutorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(finalizarAutorBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(finalizarAutorBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(editarAutorBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(borrarAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(agregarAutorBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(idTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nomTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ap_patTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(ap_matTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(seleccionarBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void agregarAutorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarAutorBTNActionPerformed
        if (confirmaTextField()) {
            limpiarTabla();
            
            String nombre = nomTXT.getText().toUpperCase();
            String ap_pat = ap_patTXT.getText().toUpperCase();
            String ap_mat = ap_matTXT.getText().toUpperCase();

            Autor a = new Autor(nombre, ap_pat, ap_mat);
            a.agregarAutor(nombre, ap_pat, ap_mat);

            mostrarTabla();

            JOptionPane.showMessageDialog(new JFrame(), "Autor agregado Satisfactoriamente");

        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Complete todos los campos porfavor");

        }

    }//GEN-LAST:event_agregarAutorBTNActionPerformed

    private void editarAutorBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarAutorBTNActionPerformed
        limpiarTabla();
        
        int id_autor;
        id_autor =Integer.parseInt(idTXT.getText());
        String nombre = nomTXT.getText().toUpperCase();
        String ap_pat = ap_patTXT.getText().toUpperCase();
        String ap_mat = ap_matTXT.getText().toUpperCase();

        Autor a = new Autor(id_autor,nombre, ap_pat, ap_mat);
        a.actualizarAutor(id_autor,nombre, ap_pat, ap_mat);
        mostrarTabla();
    }//GEN-LAST:event_editarAutorBTNActionPerformed

    private void borrarAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarAutorActionPerformed
        limpiarTabla();
        int id_autor;
        id_autor =Integer.parseInt(idTXT.getText());
        String nombre = nomTXT.getText().toUpperCase();
        String ap_pat = ap_patTXT.getText().toUpperCase();
        String ap_mat = ap_matTXT.getText().toUpperCase();

        Autor a = new Autor(id_autor,nombre, ap_pat, ap_mat);
        a.borrarAutor(id_autor,nombre, ap_pat, ap_mat);
        mostrarTabla();
    }//GEN-LAST:event_borrarAutorActionPerformed
    
    private void nomTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomTXTActionPerformed
 
    private void nomTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomTXTKeyTyped
        char c = evt.getKeyChar();
        if((c< 'a' || c>'z') && (c< 'A' || c>'Z')&& (c>' ')&&(c<'√°'||c>'√∫')&&(c<'√Å'||c>'√ö')) evt.consume();
    }//GEN-LAST:event_nomTXTKeyTyped

    private void ap_patTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ap_patTXTKeyTyped
        char c = evt.getKeyChar();
       if((c< 'a' || c>'z') && (c< 'A' || c>'Z')&& (c>' ')&&(c<'√°'||c>'√∫')&&(c<'√Å'||c>'√ö')) evt.consume();
    }//GEN-LAST:event_ap_patTXTKeyTyped

    private void ap_matTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ap_matTXTKeyTyped
        char c = evt.getKeyChar();
       if((c< 'a' || c>'z') && (c< 'A' || c>'Z')&& (c>' ')&&(c<'√°'||c>'√∫')&&(c<'√Å'||c>'√ö')) evt.consume();
    }//GEN-LAST:event_ap_matTXTKeyTyped

    private void idTXTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTXTKeyTyped
        char x = evt.getKeyChar();               
        if(x<'0' || x>'9' ) evt.consume();
    }//GEN-LAST:event_idTXTKeyTyped
    public void limpiarTabla() {
       for (int i = 0; i < listaAutor.size(); i++) {
            listaAutor.remove(i);
        }


    }
    
    public void mostrarTabla() {
        limpiarTabla();
        MySQLManager manager = new MySQLManager("localhost", "3306", "bibliotecafastdevelopment", "root", "");
        manager.executeQueryConsultaLLenaTablaAutores(listaAutor);
        String matriz[][] = new String[listaAutor.size()][4];

        for (int i = 0; i < listaAutor.size(); i++) {

            String idaut = Integer.toString(listaAutor.get(i).getId_autor());

            matriz[i][0] = idaut;
            matriz[i][1] = listaAutor.get(i).getNombre();
            matriz[i][2] = listaAutor.get(i).getAp_pat();
            matriz[i][3] = listaAutor.get(i).getAp_mat();

        }
        autorTBL.setModel(new javax.swing.table.DefaultTableModel(
                matriz,
                new String[]{
                    "Id Cliente", "Nombre", "Apellido paterno", "Apellido materno"
                }
        ));

    }
 
    private boolean confirmaTextField() {
        boolean nombre = false;
        boolean ap_pat = false;
        boolean ap_mat = false;
        int contver = 0;

        nombre = nomTXT.getText().isEmpty();
        ap_pat = ap_patTXT.getText().isEmpty();
        ap_mat = ap_matTXT.getText().isEmpty();

        boolean[] arraytxt = new boolean[]{nombre, ap_pat, ap_mat};
        for (boolean elemento : arraytxt) {
            if (elemento == true) {

            } else {
                contver++;

            }

        }
        return contver == 3;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vistaAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vistaAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vistaAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vistaAutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vistaAutor().setVisible(true);

            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarAutorBTN;
    private javax.swing.JTextField ap_matTXT;
    private javax.swing.JTextField ap_patTXT;
    private javax.swing.JTable autorTBL;
    private javax.swing.JButton borrarAutor;
    private javax.swing.JButton editarAutorBTN;
    private javax.swing.JButton finalizarAutorBTN;
    private javax.swing.JTextField idTXT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomTXT;
    private javax.swing.JButton seleccionarBTN;
    // End of variables declaration//GEN-END:variables
}
